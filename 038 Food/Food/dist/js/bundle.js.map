{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,oCAAoC;AACpC,sCAAsC;AACtC,IAAI;AACJ,mBAAmB;AACnB,0CAA0C;AAC1C;AACA;AACA,sCAAsC;AACtC,0CAA0C;AAC1C,IAAI;AACJ,kBAAkB;AAClB,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG,MAAM;AACN,0GAA0G;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,2CAA2C;AAC3C,sEAAsE,kBAAkB;AACxF,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,+CAA+C;AAC/C,sDAAsD;AACtD,6DAA6D;AAC7D,oFAAoF;AACpF,cAAc;AACd,kDAAkD;AAClD,yEAAyE;AACzE;AACA;AACA;AACA,mDAAmD;AACnD,aAAa;AACb;AACA,gDAAgD;AAChD;AACA;AACA,UAAU;AACV,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,mDAAmD;AACnD;AACA,0CAA0C;AAC1C;AACA,sCAAsC;AACtC,iDAAiD;AACjD,UAAU;AACV,wCAAwC;AACxC;AACA;AACA,yCAAyC;AACzC;AACA,sCAAsC;AACtC,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,4CAA4C;AAC5C,oDAAoD;AACpD,aAAa,KAAK;AAClB;AACA,aAAa;AACb;AACA;AACA,+BAA+B,UAAU,MAAM,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,2BAA2B,iCAAiC,MAAM;AAClE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,4CAA4C;AAC5C;AACA,kCAAkC;AAClC,0BAA0B,iCAAiC,OAAO;AAClE,6DAA6D;AAC7D;AACA,mDAAmD;AACnD;AACA,+GAA+G,IAAI;AACnH,8BAA8B,KAAK,MAAM,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA,0EAA0E;AAC1E,YAAY;AACZ;AACA;AACA;AACA;;;;;;;;;;ACrFA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,KAAK;AACL;AACA,2CAA2C;AAC3C,oCAAoC;AACpC;AACA;AACA;AACA,cAAc;AACd;AACA,SAAS;AACT;AACA,gCAAgC;AAChC;AACA;AACA,iCAAiC;AACjC,gDAAgD;AAChD,+BAA+B;AAC/B;AACA,8DAA8D;AAC9D,gDAAgD;AAChD;AACA;AACA;AACA,UAAU,8CAA8C;AACxD,6BAA6B;AAC7B,kEAAkE;AAClE;AACA,gDAAgD;AAChD;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,aAAa;AACb,iDAAiD;AACjD,aAAa;AACb,6BAA6B;AAC7B,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,yEAAyE;AACzE;AACA,8CAA8C;AAC9C,oBAAoB;AACpB;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,yBAAyB;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iDAAiD;AACjD,KAAK;AACL;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACA,oCAAoC;AACpC,uCAAuC;AACvC,0CAA0C;AAC1C,gDAAgD;AAChD,oCAAoC;AACpC,SAAS,6BAA6B;AACtC;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,uBAAuB;AACvB,mBAAmB;AACnB;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC;AACvC;AACA,oGAAoG;AACpG,mBAAmB;AACnB;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,8BAA8B;AAC9B;AACA,oBAAoB,mBAAmB;AACvC,iDAAiD,gBAAgB;AACjE,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wBAAwB;AAClC;AACA,kCAAkC;AAClC;AACA,+BAA+B;AAC/B,uBAAuB;AACvB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA,UAAU;AACV,6CAA6C;AAC7C;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA,sDAAsD;AACtD,+CAA+C;AAC/C,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA,UAAU;AACV,6CAA6C;AAC7C;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yBAAyB;AACzB;AACA;AACA;AACA,+BAA+B;AAC/B,0DAA0D;AAC1D;AACA,sDAAsD,OAAO,KAAK;AAClE;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,8BAA8B;AAC9B;AACA;AACA,mCAAmC,cAAc;AACjD,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,+DAA+D;AAC/D;AACA,0DAA0D;AAC1D;AACA;AACA,yCAAyC,WAAW;AACpD,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,6CAA6C;AAC7C,0BAA0B;AAC1B,QAAQ;AACR;AACA,6CAA6C;AAC7C,yBAAyB;AACzB,QAAQ;AACR;AACA;AACA;;;;;;;;;;ACjMA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,+BAA+B;AAC/B,qCAAqC;AACrC;AACA,kDAAkD;AAClD,SAAS;AACT;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT;AACA;AACA,oCAAoC;AACpC,qDAAqD;AACrD,gDAAgD;AAChD,wDAAwD;AACxD;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA,0DAA0D,yBAAyB;AACnF,oCAAoC;AACpC;AACA,oEAAoE;AACpE,uCAAuC;AACvC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UC1DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,kDAAkD;AAClD,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE,8B","sources":["webpack://dist/./js/modules/calc.js","webpack://dist/./js/modules/cards.js","webpack://dist/./js/modules/forms.js","webpack://dist/./js/modules/modal.js","webpack://dist/./js/modules/slider.js","webpack://dist/./js/modules/tabs.js","webpack://dist/./js/modules/timer.js","webpack://dist/webpack/bootstrap","webpack://dist/./js/script.js"],"sourcesContent":["function calc(){\r\n    //Calc\r\n\r\n  const result = document.querySelector('.calculating__result span');\r\n  \r\n  let sex, height, weight, age, ratio;//назначаем переменные в одну строку\r\n\r\n  if (localStorage.getItem('sex')) {//\r\n    sex = localStorage.getItem('sex');//устанавливаем переменную в которую получаем значение из localStorage\r\n  } else {\r\n    sex = 'female';//если нет значения из localStorage, то ставим исходную позицию female\r\n    localStorage.setItem('sex', 'female');//и при этом установим в localStorage значения пол - женский\r\n  }\r\n\r\n  if (localStorage.getItem('ratio')) {//инициализируем условие\r\n    ratio = localStorage.getItem('ratio');//устанавливаем переменную, в которую получаем значение из localStorage\r\n  } else {\r\n    ratio = 1.375;//если нет значения из localStorage, то ставим исходную позицию 1.375\r\n    localStorage.setItem('ratio', 1.375);//и при этом установим в localStorage значения ratio - 1.375\r\n  }\r\n\r\n  function calcTotal() {\r\n    if (!sex || !height || !weight || !age || !ratio){\r\n        result.textContent = '____';\r\n        return;\r\n    }\r\n\r\n    if(sex === 'female') {\r\n        result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);//формула подсчета данных с сайта https://fitseven.ru/zdorovie/metabolism/sutochnaya-norma-kaloriy\r\n    } else {\r\n        result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);//округлили значения\r\n    }\r\n  }\r\n  \r\n  calcTotal();\r\n\r\n  function initLocalSettings(selector, activeClass) {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    elements.forEach(elem => {//переберем каждый элемент\r\n        elem.classList.remove(activeClass);//удалим класс актвиности\r\n        if (elem.getAttribute('id') === localStorage.getItem('sex')) {//создаем условие;обращаемся к атрибуту элемента и если он будет строго равен значению из localStorage\r\n            elem.classList.add(activeClass);//даннуму div (элементу) мы назначим класс активности\r\n        }\r\n        if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\r\n            elem.classList.add(activeClass);\r\n        }\r\n    });\r\n  }\r\n\r\n  initLocalSettings('#gender div','calculating__choose-item_active');\r\n  initLocalSettings('.calculating__choose_big div','calculating__choose-item_active');\r\n\r\n  function getStaticInformation(selector, activeClass) {\r\n     const elements = document.querySelectorAll(selector);//внутри родителя будем получать все дивы\r\n     \r\n     elements.forEach(elem => {\r\n        elem.addEventListener('click', (e) => {//используем делегирование события\r\n            if (e.target.getAttribute('data-ratio')) {//если такой атрибут присутствует у объекта события\r\n                ratio = +e.target.getAttribute('data-ratio');// то мы устанавливаем переменную ratio для которой вытаскиваем e.target(физ.активность)\r\n                localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));//сохраняем значения введеные пользователем\r\n            } else {\r\n                sex = e.target.getAttribute('id');//когда условие не сработает, то получаем id пола\r\n                localStorage.setItem('sex', e.target.getAttribute('id'));//сохраняем значения введеные пользователем\r\n            }\r\n    \r\n            elements.forEach(elem => {\r\n                elem.classList.remove(activeClass);//убираем класс активности у всех эелементов \r\n            });\r\n    \r\n            e.target.classList.add(activeClass);//назначаем класс активности тому, который нужен\r\n    \r\n            calcTotal();\r\n         });\r\n     });\r\n  }\r\n  \r\n  getStaticInformation('#gender div','calculating__choose-item_active');\r\n  getStaticInformation('.calculating__choose_big div','calculating__choose-item_active');\r\n\r\n  function getDynamicInformation(selector) {//функция будет обрабатывать каждый отдельный input строка:(ваша конституция)\r\n    const input = document.querySelector(selector);//получаем input, который ввел пользователь в поле\r\n\r\n    input.addEventListener('input', () =>{//навесим обработчик события input, чтобы отследить ввод данных в поле от пользователя\r\n       \r\n        if (input.value.match(/\\D/g)){//применим регулярное выражение, где глобально установили класс not digets(не цифры) - это наше условие\r\n            input.style.border = '1px solid red';//подсвечивает красным, если вводят в инпут буквы\r\n        } else {\r\n            input.style.border = 'none';// иначе без подсвечивания\r\n        }\r\n       \r\n        switch(input.getAttribute('id')){//запустим метод switch case, который проверит соовтетствие строки\r\n            case 'height'://если это действительно input с ростом то\r\n                height = +input.value;//берем эту переменную и записываем в неё значение, которое ввел пользователь\r\n                break;//остановили\r\n            case 'weight':\r\n                weight = +input.value;\r\n                break;\r\n            case 'age':\r\n                age = +input.value;\r\n                break;\r\n       }   \r\n\r\n       calcTotal();\r\n    });\r\n\r\n  }\r\n\r\n  getDynamicInformation('#height');\r\n  getDynamicInformation('#weight');\r\n  getDynamicInformation('#age');\r\n}\r\n\r\nmodule.exports = calc;","function cards (){\r\n     //Используем классы для карточек\r\n     class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes){\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 97;\r\n            this.changeToRUB();\r\n        }\r\n    //Методы\r\n    \r\n        changeToRUB() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n            \r\n            if(this.classes.length === 0) {//обращаемя к количесву элементов в массиве, если длина = 0, то\r\n                this.classes = 'menu__item';//перезаписываем пустой элемент массива\r\n                element.classList.add(this.classes);//то вставим дэфолтный класс\r\n            }else{//иначе будет запускаться следующая строка\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }//Реализация защиты от дурака, чтобы сохранить стоковый вид объекта\r\n            \r\n            element.innerHTML = `\r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                    </div>\r\n                `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    const getResource = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();// возвращаем промис(трансформирует в json)\r\n    };\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => {//деструктуризировать на несколько частей\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n        // getResource('http://localhost:3000/menu')\r\n    //     .then(data => createCard(data)); // обращаемся к функции с датой\r\n\r\n    // function createCard(data) {// дата - массив\r\n    //     data.forEach(({img, altimg, title, descr, price}) => { //перебераем массив, деструкторизируем объекты на отдельные свойства\r\n    //         const element = document.createElement('div');// создаем новый див\r\n\r\n    //         element.classList.add(\"menu__item\");// помещаем в новый класс\r\n\r\n    //         element.innerHTML = `// формирует верстку и вов внутрь помещает свойства пришедшие от сервера ${img}...\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n    //         `;\r\n    //         document.querySelector(\".menu .container\").append(element);// и аппендит карточку в какой нибудь элемент на странице\r\n    //     });\r\n    // }\r\n}\r\n\r\nmodule.exports = cards;","function forms(){\r\n    // Forms\r\n\r\n    const forms = document.querySelectorAll('form');//получаем все формы\r\n\r\n    const message = {//объект с свойствми сообщений при различных ситуациях\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item =>{\r\n        bindPostData(item);//обрабатываем события\r\n    });\r\n\r\n    const postData = async (url, data) => {//postData настраивает запрос\r\n        let res = await fetch(url, {//postData посылает запрос на сервер\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n             },\r\n            body: data \r\n        });\r\n\r\n        return await res.json();// возвращаем промис(трансформирует в json)\r\n    };\r\n\r\n    function bindPostData(form) {//функция постинг данных\r\n        form.addEventListener('submit', (e) => {//добавим обработчик события отправки формы заполенения по нажатию \"отправить\"\r\n            e.preventDefault();//отменить стандартное поведение браузера, чтобы не перезагружался после отправки формы клиентом\r\n\r\n            let statusMessage = document.createElement('img');//создаем новый динамический блок на странице HTML\r\n            statusMessage.src = message.loading;//создали изображение подставили атрибут src\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n        `;//помещаем сообщение, которое хотим показать; работает когда у клиента медленный интернет\r\n//form.append(statusMessage);//выводить сообщение на форме\r\n            form.insertAdjacentElement('afterend', statusMessage);//чтобы спинер запускался после формы        \r\n \r\n            const formData = new FormData(form);//сбор данных из form\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));//formData (инфа с формы) помещаем в массив массивов дальше в классический объект дальше в JSON\r\n\r\n            postData('http://localhost:3000/requests', json)//отправляем json на сервер\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);//сообщение об успешной операции\r\n                statusMessage.remove();\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);//выводим сообщение об ошибке\r\n            }).finally(() => {\r\n                form.reset();//очищаем форму\r\n            });\r\n \r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');//получим блок и поместим в переменную\r\n\r\n        prevModalDialog.classList.add('hide');//скроем предыдущий контент\r\n        openModal();//функция отвечает за открытие модальных окон\r\n\r\n\r\n        const thanksModal = document.createElement('div');//начинаем создавать блок нового контента\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `; \r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {//используем асинхронную операцию\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();//закроем модальное окно\r\n        }, 4000);  \r\n    }\r\n\r\n    // fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    //     method: \"POST\",\r\n    //     body: JSON.stringify({name: 'Konsta'}),\r\n    //     headers: {\r\n    //         'Content-type': 'application/json'\r\n    //     }\r\n    // })\r\n    //   .then(response => response.json())//возвращает промис\r\n    //   .then(json => console.log(json));\r\n    fetch('http://localhost:3000/menu')\r\n        .then(data => data.json())\r\n        .then(res => console.log(res));\r\n}\r\n\r\nmodule.exports = forms;","function modal(){\r\n    //Modal\r\n\r\n    const modalTrigger = document.querySelectorAll('[data-modal]'),\r\n            modal = document.querySelector('.modal');\r\n\r\n    modalTrigger.forEach(btn => {//Перебераем\r\n        btn.addEventListener('click', openModal);//открытие модального окна\r\n    });\r\n\r\n    function closeModal () {\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    // modal.classList.toggle('show');//другой способ\r\n    document.body.style.overflow = '';//страница приходит в исходное положение после закрытие модального окна\r\n    }\r\n\r\n    function openModal() {\r\n        modal.classList.add('show');//показать окно\r\n        modal.classList.remove('hide');//скрыть окно\r\n        // modal.classList.toggle('show');//другой способ\r\n        document.body.style.overflow = 'hidden';//основная страница фиксирована при появлении модального окна\r\n        clearInterval(modalTimerId);//очищаем интервал\r\n        }//смещение кода Tab + Shift; сместить в право Tab (для себя инфа)   \r\n        \r\n    modal.addEventListener('click', (e) => {\r\n         if (e.target === modal || e.target.getAttribute('data-close') == \"\") {\r\n           closeModal();\r\n         }  \r\n    });//обработчик события клика, который закрывает модальное окно при клике в область страницы\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    const modalTimerId = setTimeout(openModal, 50000); //автоматический вызов модального окана\r\n    // коммент чтобы не всплывало, но перестает работать удаление модального окна после прокрутки вниз страницы, окно постоянно высплывает.\r\n    function showModalByScroll() {\r\n        if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal();\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }  \r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n}\r\n\r\nmodule.exports = modal;","function slider(){\r\n    //Slider\r\n\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n         slider =document.querySelector('.offer__slider'),\r\n         prev = document.querySelector('.offer__slider-prev'),\r\n         next = document.querySelector('.offer__slider-next'),\r\n         total = document.querySelector('#total'),//получим элемент\r\n         current = document.querySelector('#current'),//получим элемент - блок слайда\r\n         slidesWrapper = document.querySelector('.offer__slider-wrapper'),//главная обертка\r\n         slidesField = document.querySelector('.offer__slider-inner'),//поле со слайдами\r\n         width = window.getComputedStyle(slidesWrapper).width;//вытаскиваем из элемента ширину\r\n\r\n\r\n    let slideIndex = 1;//создаем индекс и подразумеваем - переменная будет меняться\r\n    let offset = 0;//отступ\r\n\r\n      if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    }else{\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0,5s all';\r\n    \r\n    slidesWrapper.style.overflow = 'hidden';\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';//устанавливаем позишн релатив\r\n\r\n    const indicators = document.createElement('ol'),//обертка всех точек с последующей стилизацией; ol - order list\r\n         dots = [];//истинный массив не псевдо \r\n\r\n    indicators.classList.add('carousel-indicators');//назначим класс для индикатора, которого еще нет в css, но чтобы он был на элементе \r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;//навешиваем css style\r\n    slider.append(indicators);// поместить обертку во внутрь слайдера\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');//содаем точки; li - list item\r\n        dot.setAttribute('data-slide-to', i + 1);//создаем атрибут первая точка идет к первому слайду\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;//навешиваем css стили; по другому можно создать класс и добавить в него все эти стили\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;//активировали точку положение 1\r\n        }\r\n        indicators.append(dot);//зааппендили точку на страницу\r\n        dots.push(dot);//помещаем зааппенденную точку в массив(массив с точками)\r\n    }//блок кода, который согласно количеству слайдов создает соответсвующее кол-во точек\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if(offset == deleteNotDigits(width) * (slides.length - 1)){//'500px'\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);//смещение слайда\r\n        }\r\n       \r\n        slidesField.style.transform =`translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n        \r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');//берем массив дотс и перебераем через forEach делая не активные точки прозрачными на 50%\r\n        dots[slideIndex - 1].style.opacity = 1;//устанавливает почти не прозрачную активную точку\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if(offset == 0){//'500px'\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);//смещение слайда\r\n        }\r\n        \r\n        slidesField.style.transform =`translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n       \r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    dots.forEach(dot => {//вновь переберем дотс\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n          slideIndex = slideTo;// тыкнули на 4 и slideIndex будет 4\r\n          offset = deleteNotDigits(width) * (slideTo - 1);//здесь нужно умножить общую ширину не на к-во слайдов, а на slideTo\r\n\r\n          slidesField.style.transform =`translateX(-${offset}px)`;//сделаем смещение \r\n\r\n          if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n          dots.forEach(dot => dot.style.opacity = '.5');\r\n          dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n\r\n    // showSlides(slideIndex);//инициализация нужной нам структуры показа слайдов\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // }else{\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length){\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }//блок кода выполняет зацикливание прокрутку слайдов\r\n    //     slides.forEach(item => item.style.display = 'none');//скрываем слайды\r\n\r\n    //     slides[slideIndex - 1].style.display = 'block';//показываем активный слайд\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     }else{\r\n    //         current.textContent = slideIndex;\r\n    //     }// теперь будет изменяться слай и счетчик номера показа слайда\r\n    // }\r\n\r\n    // function plusSlides(n) {\r\n    //     showSlides(slideIndex += n);//шагам по слайдам в увеличение\r\n    // }\r\n\r\n    // prev.addEventListener('click', () => {//назначаем обработчик события 'click'\r\n    //     plusSlides(-1);// пролистывание на предыдущий слайд\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {//назначаем обработчик события 'click'\r\n    //     plusSlides(1);// пролистывание на следующий слайд\r\n    // });\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    //Tab\r\n    let tabs = document.querySelectorAll('.tabheader__item'),//пременная с перебором класса табов\r\n    tabsContent = document.querySelectorAll('.tabcontent'),//переменная с перебором класса контента\r\n    tabsParent = document.querySelector('.tabheader__items');//переменнная родитель с перебором класса табов, нужно получить один элемент поэтому без All\r\n\r\n    function hideTabContent() {//создаем функцию скрыть все не нужные табы\r\n        tabsContent.forEach(item => {//Так как псевдомассив его нужно перебрать\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');// удаляем классы при переключении таба\r\n        });\r\n\r\n    tabs.forEach(item => {//перебором у каждого таба удаляем класс активности\r\n        item.classList.remove('tabheader__item_active');\r\n        });\r\n    }    \r\n    \r\n    function showTabContent(i = 0) {//функция показвает нам табы\r\n        tabsContent[i].classList.add('show', 'fade');//у выбранного элемента подключаем класс show и эффект класса fade\r\n        tabsContent[i].classList.remove('hide');//у выбранного элемента таба удаляем класс hide\r\n        tabs[i].classList.add('tabheader__item_active');//добавляем класс табу\r\n    }\r\n\r\n    hideTabContent();//Вызов функции скрыть\r\n    showTabContent();//Вызов функции показать\r\n\r\n    tabsParent.addEventListener('click', function(event) {//делигирование события; добавляем обработчик события клика пользователя\r\n        const target = event.target;//применяем переменную, чтобы упростить вызов это конструкции\r\n\r\n        if (target && target.classList.contains('tabheader__item')){//проверяем точное нажатие на таб\r\n            tabs.forEach((item, i) => {//переберем все табы, которые лежат в переменной tabs и будем сравнивать совпадает нажатие пользователя с элементом псевдомассива tabs\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i); \r\n                }\r\n            });\r\n        }\r\n    });    \r\n}\r\n\r\nmodule.exports = tabs;\r\n","function timer(){\r\n    //Timer\r\n\r\n    const deadLine = '2024-05-20';\r\n\r\n    function getTimeRemaining(endtime){\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),//разница дедлайна от текущей даты\r\n                days = Math.floor(t / (1000 * 60 * 60 * 24)),//получаем к-во дней\r\n                hours = Math.floor((t / (1000 * 60 * 60) % 24)),//возвращаем остаток от деления и получаем часы\r\n                minutes = Math.floor((t / 1000 / 60) % 60),\r\n                seconds = Math.floor((t / 1000) % 60);\r\n                \r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n }\r\n\r\n function getZero(num){\r\n    if(num >= 0 && num < 10) {\r\n        return `0${num}`;\r\n    }else{\r\n        return num;\r\n    }\r\n }\r\n \r\n  function setClock(selector, endtime) {\r\n     \r\n    const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n        \r\n        updateClock();\r\n    \r\n     function updateClock() {\r\n        const t = getTimeRemaining(endtime);\r\n\r\n        days.innerHTML = getZero(t.days);\r\n        hours.innerHTML = getZero(t.hours);\r\n        minutes.innerHTML = getZero(t.minutes);\r\n        seconds.innerHTML = getZero(t.seconds);\r\n\r\n        if (t.total <= 0){\r\n            clearInterval(timeInterval);\r\n        }\r\n    }\r\n\r\n }\r\n\r\n    setClock('.timer', deadLine);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', () =>{//назначение глобального обработчика событий\r\n    const tabs = require('./modules/tabs'),\r\n          modal = require('./modules/modal'),\r\n          timer = require('./modules/timer'),\r\n          cards = require('./modules/cards'),\r\n          forms = require('./modules/forms'),\r\n          slider = require('./modules/slider'),\r\n          calc = require('./modules/calc');\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    cards();\r\n    forms();\r\n    slider();\r\n    calc();\r\n});//импортируем все кусочки кода"],"names":[],"sourceRoot":""}