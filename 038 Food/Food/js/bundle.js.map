{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://dist/./js/modules/modal.js","webpack://dist/./js/script.js","webpack://dist/./js/modules/tabs.js","webpack://dist/./js/modules/timer.js","webpack://dist/./js/modules/cards.js","webpack://dist/./js/services/services.js","webpack://dist/./js/modules/forms.js","webpack://dist/./js/modules/slider.js","webpack://dist/./js/modules/calc.js"],"sourcesContent":["function closeModal (modalSelector) {\r\n        const modal = document.querySelector(modalSelector);\r\n        \r\n        modal.classList.add('hide');\r\n        modal.classList.remove('show');\r\n        // modal.classList.toggle('show');//другой способ\r\n        document.body.style.overflow = '';//страница приходит в исходное положение после закрытие модального окна\r\n    }\r\n\r\nfunction openModal(modalSelector, modalTimerId) {\r\n        const modal = document.querySelector(modalSelector);\r\n        \r\n        modal.classList.add('show');//показать окно\r\n        modal.classList.remove('hide');//скрыть окно\r\n        // modal.classList.toggle('show');//другой способ\r\n        document.body.style.overflow = 'hidden';//основная страница фиксирована при появлении модального окна\r\n        \r\n        //console.log(modalTimerId);\r\n        if (modalTimerId){\r\n            clearInterval(modalTimerId);\r\n        }\r\n        //clearInterval(modalTimerId);//очищаем интервал\r\n}//смещение кода Tab + Shift; сместить в право Tab (для себя инфа)  \r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId){\r\n\r\n    const modalTrigger = document.querySelectorAll(triggerSelector),\r\n            modal = document.querySelector(modalSelector);\r\n\r\n    modalTrigger.forEach(btn => {//Перебераем\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));//открытие модального окна\r\n    });\r\n \r\n    modal.addEventListener('click', (e) => {\r\n         if (e.target === modal || e.target.getAttribute('data-close') == \"\") {\r\n           closeModal(modalSelector);\r\n         }  \r\n    });//обработчик события клика, который закрывает модальное окно при клике в область страницы\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n         \r\n    function showModalByScroll() {\r\n        if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }  \r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal};\r\nexport {openModal};","        import  tabs   from'./modules/tabs';\r\n        import  modal  from'./modules/modal';\r\n        import  timer  from'./modules/timer';\r\n        import  cards  from'./modules/cards';\r\n        import  forms  from'./modules/forms';\r\n        import  slider from'./modules/slider';\r\n        import  calc   from'./modules/calc';\r\n        import {openModal} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () =>{//назначение глобального обработчика событий\r\n    \r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    timer('.timer', '2024-11-20');\r\n    cards();\r\n    forms('form', modalTimerId);\r\n    slider({\r\n        container:'.offer__slider',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        slide: '.offer__slide',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });\r\n    calc();\r\n});//импортируем все кусочки кода","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n   \r\n    //Tab\r\n    let tabs = document.querySelectorAll(tabsSelector),//пременная с перебором класса табов\r\n    tabsContent = document.querySelectorAll(tabsContentSelector),//переменная с перебором класса контента\r\n    tabsParent = document.querySelector(tabsParentSelector);//переменнная родитель с перебором класса табов, нужно получить один элемент поэтому без All\r\n\r\n    function hideTabContent() {//создаем функцию скрыть все не нужные табы\r\n        tabsContent.forEach(item => {//Так как псевдомассив его нужно перебрать\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');// удаляем классы при переключении таба\r\n        });\r\n\r\n    tabs.forEach(item => {//перебором у каждого таба удаляем класс активности\r\n        item.classList.remove(activeClass);\r\n        });\r\n    }    \r\n    \r\n    function showTabContent(i = 0) {//функция показвает нам табы\r\n        tabsContent[i].classList.add('show', 'fade');//у выбранного элемента подключаем класс show и эффект класса fade\r\n        tabsContent[i].classList.remove('hide');//у выбранного элемента таба удаляем класс hide\r\n        tabs[i].classList.add(activeClass);//добавляем класс табу\r\n    }\r\n\r\n    hideTabContent();//Вызов функции скрыть\r\n    showTabContent();//Вызов функции показать\r\n\r\n    tabsParent.addEventListener('click', function(event) {//делигирование события; добавляем обработчик события клика пользователя\r\n        const target = event.target;//применяем переменную, чтобы упростить вызов это конструкции\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {//проверяем точное нажатие на таб\r\n            tabs.forEach((item, i) => {//переберем все табы, которые лежат в переменной tabs и будем сравнивать совпадает нажатие пользователя с элементом псевдомассива tabs\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i); \r\n                }\r\n            });\r\n        }\r\n    });    \r\n}\r\n\r\nexport default tabs;\r\n","function timer(id, deadLine){\r\n    \r\n\r\n    function getTimeRemaining(endtime){\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),//разница дедлайна от текущей даты\r\n                days = Math.floor(t / (1000 * 60 * 60 * 24)),//получаем к-во дней\r\n                hours = Math.floor((t / (1000 * 60 * 60) % 24)),//возвращаем остаток от деления и получаем часы\r\n                minutes = Math.floor((t / 1000 / 60) % 60),\r\n                seconds = Math.floor((t / 1000) % 60);\r\n                \r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n }\r\n\r\n function getZero(num){\r\n    if(num >= 0 && num < 10) {\r\n        return `0${num}`;\r\n    }else{\r\n        return num;\r\n    }\r\n }\r\n \r\n  function setClock(selector, endtime) {\r\n     \r\n    const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n        \r\n        updateClock();\r\n    \r\n     function updateClock() {\r\n        const t = getTimeRemaining(endtime);\r\n\r\n        days.innerHTML = getZero(t.days);\r\n        hours.innerHTML = getZero(t.hours);\r\n        minutes.innerHTML = getZero(t.minutes);\r\n        seconds.innerHTML = getZero(t.seconds);\r\n\r\n        if (t.total <= 0){\r\n            clearInterval(timeInterval);\r\n        }\r\n    }\r\n\r\n }\r\n\r\n    setClock(id, deadLine);\r\n}\r\n\r\nexport default timer;","import {getResource} from '../services/services';\r\n\r\nfunction cards (){\r\n     //Используем классы для карточек\r\n     class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes){\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 97;\r\n            this.changeToRUB();\r\n        }\r\n    //Методы\r\n    \r\n        changeToRUB() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n            \r\n            if(this.classes.length === 0) {//обращаемя к количесву элементов в массиве, если длина = 0, то\r\n                this.classes = 'menu__item';//перезаписываем пустой элемент массива\r\n                element.classList.add(this.classes);//то вставим дэфолтный класс\r\n            }else{//иначе будет запускаться следующая строка\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }//Реализация защиты от дурака, чтобы сохранить стоковый вид объекта\r\n            \r\n            element.innerHTML = `\r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                    </div>\r\n                `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n       getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => {//деструктуризировать на несколько частей\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n        // getResource('http://localhost:3000/menu')\r\n    //     .then(data => createCard(data)); // обращаемся к функции с датой\r\n\r\n    // function createCard(data) {// дата - массив\r\n    //     data.forEach(({img, altimg, title, descr, price}) => { //перебераем массив, деструкторизируем объекты на отдельные свойства\r\n    //         const element = document.createElement('div');// создаем новый див\r\n\r\n    //         element.classList.add(\"menu__item\");// помещаем в новый класс\r\n\r\n    //         element.innerHTML = `// формирует верстку и вов внутрь помещает свойства пришедшие от сервера ${img}...\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n    //         `;\r\n    //         document.querySelector(\".menu .container\").append(element);// и аппендит карточку в какой нибудь элемент на странице\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport default cards;","const postData = async (url, data) => {//postData настраивает запрос\r\n    let res = await fetch(url, {//postData посылает запрос на сервер\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n         },\r\n        body: data \r\n    });\r\n\r\n    return await res.json();// возвращаем промис(трансформирует в json)\r\n};\r\n\r\nasync function getResource(url) {\r\n    let res = await fetch(url);\r\n\r\n    if(!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();// возвращаем промис(трансформирует в json)\r\n}\r\n\r\nexport {postData};\r\nexport {getResource};","import { closeModal, openModal } from \"./modal\";\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId){\r\n    // Forms\r\n\r\n    const forms = document.querySelectorAll(formSelector);//получаем все формы\r\n\r\n    const message = {//объект с свойствми сообщений при различных ситуациях\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item =>{\r\n        bindPostData(item);//обрабатываем события\r\n    });\r\n\r\n\r\n\r\n    function bindPostData(form) {//функция постинг данных\r\n        form.addEventListener('submit', (e) => {//добавим обработчик события отправки формы заполенения по нажатию \"отправить\"\r\n            e.preventDefault();//отменить стандартное поведение браузера, чтобы не перезагружался после отправки формы клиентом\r\n\r\n            let statusMessage = document.createElement('img');//создаем новый динамический блок на странице HTML\r\n            statusMessage.src = message.loading;//создали изображение подставили атрибут src\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n        `;//помещаем сообщение, которое хотим показать; работает когда у клиента медленный интернет\r\n//form.append(statusMessage);//выводить сообщение на форме\r\n            form.insertAdjacentElement('afterend', statusMessage);//чтобы спинер запускался после формы        \r\n \r\n            const formData = new FormData(form);//сбор данных из form\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));//formData (инфа с формы) помещаем в массив массивов дальше в классический объект дальше в JSON\r\n\r\n            postData('http://localhost:3000/requests', json)//отправляем json на сервер\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);//сообщение об успешной операции\r\n                statusMessage.remove();\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);//выводим сообщение об ошибке\r\n            }).finally(() => {\r\n                form.reset();//очищаем форму\r\n            });\r\n \r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');//получим блок и поместим в переменную\r\n\r\n        prevModalDialog.classList.add('hide');//скроем предыдущий контент\r\n        openModal('.modal', modalTimerId);//функция отвечает за открытие модальных окон\r\n\r\n\r\n        const thanksModal = document.createElement('div');//начинаем создавать блок нового контента\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `; \r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {//используем асинхронную операцию\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');//закроем модальное окно\r\n        }, 4000);  \r\n    }\r\n\r\n    // fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    //     method: \"POST\",\r\n    //     body: JSON.stringify({name: 'Konsta'}),\r\n    //     headers: {\r\n    //         'Content-type': 'application/json'\r\n    //     }\r\n    // })\r\n    //   .then(response => response.json())//возвращает промис\r\n    //   .then(json => console.log(json));\r\n    \r\n    // fetch('http://localhost:3000/menu')\r\n    //     .then(data => data.json())\r\n    //     .then(res => console.log(res));\r\n}\r\n\r\nexport default forms;","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}){\r\n    //Slider\r\n\r\n    let slideIndex = 1;//создаем индекс и подразумеваем - переменная будет меняться\r\n    let offset = 0;//отступ\r\n\r\n    const slides = document.querySelectorAll(slide),\r\n         slider =document.querySelector(container),\r\n         prev = document.querySelector(prevArrow),\r\n         next = document.querySelector(nextArrow),\r\n         total = document.querySelector(totalCounter),//получим элемент\r\n         current = document.querySelector(currentCounter),//получим элемент - блок слайда\r\n         slidesWrapper = document.querySelector(wrapper),//главная обертка\r\n         slidesField = document.querySelector(field),//поле со слайдами\r\n         width = window.getComputedStyle(slidesWrapper).width;//вытаскиваем из элемента ширину\r\n\r\n      if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    }else{\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0,5s all';\r\n    \r\n    slidesWrapper.style.overflow = 'hidden';\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';//устанавливаем позишн релатив\r\n\r\n    const indicators = document.createElement('ol'),//обертка всех точек с последующей стилизацией; ol - order list\r\n         dots = [];//истинный массив не псевдо \r\n\r\n    indicators.classList.add('carousel-indicators');//назначим класс для индикатора, которого еще нет в css, но чтобы он был на элементе \r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;//навешиваем css style\r\n    slider.append(indicators);// поместить обертку во внутрь слайдера\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');//содаем точки; li - list item\r\n        dot.setAttribute('data-slide-to', i + 1);//создаем атрибут первая точка идет к первому слайду\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;//навешиваем css стили; по другому можно создать класс и добавить в него все эти стили\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;//активировали точку положение 1\r\n        }\r\n        indicators.append(dot);//зааппендили точку на страницу\r\n        dots.push(dot);//помещаем зааппенденную точку в массив(массив с точками)\r\n    }//блок кода, который согласно количеству слайдов создает соответсвующее кол-во точек\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if(offset == deleteNotDigits(width) * (slides.length - 1)){//'500px'\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);//смещение слайда\r\n        }\r\n       \r\n        slidesField.style.transform =`translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n        \r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');//берем массив дотс и перебераем через forEach делая не активные точки прозрачными на 50%\r\n        dots[slideIndex - 1].style.opacity = 1;//устанавливает почти не прозрачную активную точку\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if(offset == 0){//'500px'\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);//смещение слайда\r\n        }\r\n        \r\n        slidesField.style.transform =`translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n       \r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    dots.forEach(dot => {//вновь переберем дотс\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n          slideIndex = slideTo;// тыкнули на 4 и slideIndex будет 4\r\n          offset = deleteNotDigits(width) * (slideTo - 1);//здесь нужно умножить общую ширину не на к-во слайдов, а на slideTo\r\n\r\n          slidesField.style.transform =`translateX(-${offset}px)`;//сделаем смещение \r\n\r\n          if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n          dots.forEach(dot => dot.style.opacity = '.5');\r\n          dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n\r\n    // showSlides(slideIndex);//инициализация нужной нам структуры показа слайдов\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // }else{\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length){\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }//блок кода выполняет зацикливание прокрутку слайдов\r\n    //     slides.forEach(item => item.style.display = 'none');//скрываем слайды\r\n\r\n    //     slides[slideIndex - 1].style.display = 'block';//показываем активный слайд\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     }else{\r\n    //         current.textContent = slideIndex;\r\n    //     }// теперь будет изменяться слай и счетчик номера показа слайда\r\n    // }\r\n\r\n    // function plusSlides(n) {\r\n    //     showSlides(slideIndex += n);//шагам по слайдам в увеличение\r\n    // }\r\n\r\n    // prev.addEventListener('click', () => {//назначаем обработчик события 'click'\r\n    //     plusSlides(-1);// пролистывание на предыдущий слайд\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {//назначаем обработчик события 'click'\r\n    //     plusSlides(1);// пролистывание на следующий слайд\r\n    // });\r\n}\r\n\r\nexport default slider;","function calc(){\r\n    //Calc\r\n\r\n  const result = document.querySelector('.calculating__result span');\r\n  \r\n  let sex, height, weight, age, ratio;//назначаем переменные в одну строку\r\n\r\n  if (localStorage.getItem('sex')) {//\r\n    sex = localStorage.getItem('sex');//устанавливаем переменную в которую получаем значение из localStorage\r\n  } else {\r\n    sex = 'female';//если нет значения из localStorage, то ставим исходную позицию female\r\n    localStorage.setItem('sex', 'female');//и при этом установим в localStorage значения пол - женский\r\n  }\r\n\r\n  if (localStorage.getItem('ratio')) {//инициализируем условие\r\n    ratio = localStorage.getItem('ratio');//устанавливаем переменную, в которую получаем значение из localStorage\r\n  } else {\r\n    ratio = 1.375;//если нет значения из localStorage, то ставим исходную позицию 1.375\r\n    localStorage.setItem('ratio', 1.375);//и при этом установим в localStorage значения ratio - 1.375\r\n  }\r\n\r\n  function calcTotal() {\r\n    if (!sex || !height || !weight || !age || !ratio){\r\n        result.textContent = '____';\r\n        return;\r\n    }\r\n\r\n    if(sex === 'female') {\r\n        result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);//формула подсчета данных с сайта https://fitseven.ru/zdorovie/metabolism/sutochnaya-norma-kaloriy\r\n    } else {\r\n        result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);//округлили значения\r\n    }\r\n  }\r\n  \r\n  calcTotal();\r\n\r\n  function initLocalSettings(selector, activeClass) {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    elements.forEach(elem => {//переберем каждый элемент\r\n        elem.classList.remove(activeClass);//удалим класс актвиности\r\n        if (elem.getAttribute('id') === localStorage.getItem('sex')) {//создаем условие;обращаемся к атрибуту элемента и если он будет строго равен значению из localStorage\r\n            elem.classList.add(activeClass);//даннуму div (элементу) мы назначим класс активности\r\n        }\r\n        if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\r\n            elem.classList.add(activeClass);\r\n        }\r\n    });\r\n  }\r\n\r\n  initLocalSettings('#gender div','calculating__choose-item_active');\r\n  initLocalSettings('.calculating__choose_big div','calculating__choose-item_active');\r\n\r\n  function getStaticInformation(selector, activeClass) {\r\n     const elements = document.querySelectorAll(selector);//внутри родителя будем получать все дивы\r\n     \r\n     elements.forEach(elem => {\r\n        elem.addEventListener('click', (e) => {//используем делегирование события\r\n            if (e.target.getAttribute('data-ratio')) {//если такой атрибут присутствует у объекта события\r\n                ratio = +e.target.getAttribute('data-ratio');// то мы устанавливаем переменную ratio для которой вытаскиваем e.target(физ.активность)\r\n                localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));//сохраняем значения введеные пользователем\r\n            } else {\r\n                sex = e.target.getAttribute('id');//когда условие не сработает, то получаем id пола\r\n                localStorage.setItem('sex', e.target.getAttribute('id'));//сохраняем значения введеные пользователем\r\n            }\r\n    \r\n            elements.forEach(elem => {\r\n                elem.classList.remove(activeClass);//убираем класс активности у всех эелементов \r\n            });\r\n    \r\n            e.target.classList.add(activeClass);//назначаем класс активности тому, который нужен\r\n    \r\n            calcTotal();\r\n         });\r\n     });\r\n  }\r\n  \r\n  getStaticInformation('#gender div','calculating__choose-item_active');\r\n  getStaticInformation('.calculating__choose_big div','calculating__choose-item_active');\r\n\r\n  function getDynamicInformation(selector) {//функция будет обрабатывать каждый отдельный input строка:(ваша конституция)\r\n    const input = document.querySelector(selector);//получаем input, который ввел пользователь в поле\r\n\r\n    input.addEventListener('input', () =>{//навесим обработчик события input, чтобы отследить ввод данных в поле от пользователя\r\n       \r\n        if (input.value.match(/\\D/g)){//применим регулярное выражение, где глобально установили класс not digets(не цифры) - это наше условие\r\n            input.style.border = '1px solid red';//подсвечивает красным, если вводят в инпут буквы\r\n        } else {\r\n            input.style.border = 'none';// иначе без подсвечивания\r\n        }\r\n       \r\n        switch(input.getAttribute('id')){//запустим метод switch case, который проверит соовтетствие строки\r\n            case 'height'://если это действительно input с ростом то\r\n                height = +input.value;//берем эту переменную и записываем в неё значение, которое ввел пользователь\r\n                break;//остановили\r\n            case 'weight':\r\n                weight = +input.value;\r\n                break;\r\n            case 'age':\r\n                age = +input.value;\r\n                break;\r\n       }   \r\n\r\n       calcTotal();\r\n    });\r\n\r\n  }\r\n\r\n  getDynamicInformation('#height');\r\n  getDynamicInformation('#weight');\r\n  getDynamicInformation('#age');\r\n}\r\n\r\nexport default calc;"],"names":["closeModal","modalSelector","modal","document","querySelector","classList","add","remove","body","style","overflow","openModal","modalTimerId","clearInterval","window","addEventListener","setTimeout","tabsSelector","tabsContentSelector","tabsParentSelector","activeClass","tabs","querySelectorAll","tabsContent","tabsParent","hideTabContent","forEach","item","showTabContent","i","event","target","contains","slice","triggerSelector","modalTrigger","btn","e","getAttribute","code","showModalByScroll","scrollY","documentElement","clientHeight","scrollHeight","removeEventListener","id","deadLine","getZero","num","selector","endtime","timer","days","hours","minutes","seconds","timeInterval","setInterval","updateClock","t","Date","parse","Math","floor","getTimeRemaining","innerHTML","total","setClock","MenuCard","constructor","src","alt","title","descr","price","parentSelector","classes","this","parent","transfer","changeToRUB","render","element","createElement","length","className","append","async","url","res","fetch","ok","Error","status","json","getResource","then","data","img","altimg","cards","formSelector","showThanksModal","message","prevModalDialog","thanksModal","form","preventDefault","statusMessage","cssText","insertAdjacentElement","formData","FormData","method","headers","postData","JSON","stringify","Object","fromEntries","entries","console","log","catch","finally","reset","forms","container","slide","nextArrow","prevArrow","totalCounter","currentCounter","wrapper","field","slideIndex","offset","slides","slider","prev","next","current","slidesWrapper","slidesField","width","getComputedStyle","textContent","display","transition","position","indicators","dots","dot","setAttribute","opacity","push","deleteNotDigits","str","replace","transform","slideTo","result","sex","height","weight","age","ratio","calcTotal","round","initLocalSettings","elem","localStorage","getItem","getStaticInformation","elements","setItem","getDynamicInformation","input","value","match","border","calc"],"sourceRoot":""}